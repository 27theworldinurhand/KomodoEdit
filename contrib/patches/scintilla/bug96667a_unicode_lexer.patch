Index: contrib/scintilla/lexers/LexPython.cxx
===================================================================
--- lexers/LexPython.cxx
+++ lexers/LexPython.cxx
@@ -103,25 +103,25 @@ int GetPyStringState(Accessor &styler, Sci_Position i, Sci_PositionU *nextIndex,
 		*nextIndex = i + 1;
 
 		if (ch == '"')
 			return SCE_P_STRING;
 		else
 			return SCE_P_CHARACTER;
 	}
 }
 
 inline bool IsAWordChar(int ch) {
-	return (ch < 0x80) && (isalnum(ch) || ch == '.' || ch == '_');
+	return ((unsigned int) ch >= 0x80) || isalnum(ch) || ch == '.' || ch == '_';
 }
 
 inline bool IsAWordStart(int ch) {
-	return (ch < 0x80) && (isalnum(ch) || ch == '_');
+	return ((unsigned int) ch >= 0x80) || isalnum(ch) || ch == '_';
 }
 
 // Options used for LexerPython
 struct OptionsPython {
 	int whingeLevel;
 	bool base2or8Literals;
 	bool stringsU;
 	bool stringsB;
 	bool stringsOverNewline;
 	bool keywords2NoSubIdentifiers;
