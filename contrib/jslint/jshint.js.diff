Index: /home/nathan/Projects/komodo-dev/contrib/jslint/jshint.js
--- /home/nathan/Projects/komodo-dev/contrib/jslint/jshint.js
+++ /home/nathan/Projects/komodo-dev/contrib/jslint/jshint.js (unsaved)
@@ -1,6 +1,7 @@
 /*! 2.9.5 */
 var JSHINT;
 if (typeof window === 'undefined') window = {};
+var nativeParseInt = parseInt;
 (function () {
 var require;
 require=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
@@ -2182,18 +2183,6 @@
     // See https://es5.github.io/#x11.1.5 for more details.
     context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;
 
-    /** Native constructor references. */
-    var Array = context.Array,
-        Date = context.Date,
-        Error = context.Error,
-        Function = context.Function,
-        Math = context.Math,
-        Number = context.Number,
-        Object = context.Object,
-        RegExp = context.RegExp,
-        String = context.String,
-        TypeError = context.TypeError;
-
     /** Used for native method references. */
     var arrayProto = Array.prototype,
         objectProto = Object.prototype,
@@ -2280,7 +2269,6 @@
         nativeMin = Math.min,
         nativeNow = isNative(nativeNow = Date.now) && nativeNow,
         nativeNumIsFinite = isNative(nativeNumIsFinite = Number.isFinite) && nativeNumIsFinite,
-        nativeParseInt = context.parseInt,
         nativeRandom = Math.random;
 
     /** Used as references for `-Infinity` and `Infinity`. */
@@ -3309,7 +3297,7 @@
           var result = new Object;
           Object.prototype = null;
         }
-        return result || context.Object();
+        return result || Object();
       };
     }());
 
